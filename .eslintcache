[{"C:\\Users\\dell\\Desktop\\dechea\\src\\index.js":"1","C:\\Users\\dell\\Desktop\\dechea\\src\\App.js":"2","C:\\Users\\dell\\Desktop\\dechea\\src\\components\\dropdown\\index.js":"3","C:\\Users\\dell\\Desktop\\dechea\\src\\components\\calendar\\calenderView.js":"4"},{"size":209,"mtime":1608535070412,"results":"5","hashOfConfig":"6"},{"size":307,"mtime":1608557380423,"results":"7","hashOfConfig":"6"},{"size":6178,"mtime":1608535070412,"results":"8","hashOfConfig":"6"},{"size":1567,"mtime":1608558026122,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1lkkuvy",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dell\\Desktop\\dechea\\src\\index.js",[],["20","21"],"C:\\Users\\dell\\Desktop\\dechea\\src\\App.js",[],"C:\\Users\\dell\\Desktop\\dechea\\src\\components\\dropdown\\index.js",["22","23"],"/* eslint-disable no-use-before-define */\r\n\r\nimport React, { useState } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize='small' />;\r\nconst checkedIcon = <CheckBoxIcon fontSize='small' />;\r\n\r\nconst Dropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [val, setVal] = useState({});\r\n\r\n  const renderGroup = ({ group, children, id }) => {\r\n    let options = optionsData.filter((item, i) => {\r\n      return item.position === group;\r\n    });\r\n    console.log(options, 'options');\r\n    return (\r\n      <div\r\n        style={{\r\n          borderBottom: '1px solid #25406D',\r\n          backgroundColor: '#142A51',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            paddingLeft: 20,\r\n            paddingRight: 16,\r\n          }}\r\n        >\r\n          <span style={{ fontSize: 13, color: '#A0B5D9' }}>{group}</span>\r\n          <Checkbox\r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n            // style={{ marginRight: 8 }}\r\n            //checked={option.selected}\r\n          />\r\n        </div>\r\n        {options.map((option, index) => (\r\n          <div\r\n            onClick={() => setVal(option)}\r\n            key={index}\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n              paddingLeft: 20,\r\n              paddingRight: 16,\r\n            }}\r\n          >\r\n            <span style={{ fontSize: 13, color: '#DAE2EF' }}>\r\n              {option.title}\r\n            </span>\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              // style={{ marginRight: 8 }}\r\n              checked={option.selected}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        style={{\r\n          width: 376,\r\n          height: 53,\r\n          backgroundColor: '#F0F5FB',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          flexDirection: 'row',\r\n          borderRadius: 16,\r\n        }}\r\n      >\r\n        <span style={{ color: '#7E98BA', marginLeft: 8 }}>\r\n          Select Employees\r\n        </span>\r\n      </div>\r\n      {isOpen && (\r\n        <Autocomplete\r\n          multiple\r\n          inputValue={['The Shawshank Redemption']}\r\n          id='checkboxes-tags-demo'\r\n          options={optionsData}\r\n          disableCloseOnSelect\r\n          getOptionLabel={(option) => option.title}\r\n          groupBy={(option) => option.position}\r\n          renderGroup={(group) => {\r\n            return renderGroup(group);\r\n          }}\r\n          style={{ width: 376, backgroundColor: '#142A51' }}\r\n          onChange={(e) => console.log(e, 'scfvfvsc')}\r\n          openOnFocus\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant='outlined'\r\n              // label='Checkboxes'\r\n              placeholder='Search employee...'\r\n              style={{ backgroundColor: '#142A51', borderRadius: 10 }}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst optionsData = [\r\n  {\r\n    title: 'Un grouped',\r\n    year: 1994,\r\n  },\r\n  {\r\n    title: 'The Shawshank Redemption',\r\n    year: 1994,\r\n    position: 'All practitioners',\r\n  },\r\n  { title: 'The Godfather', year: 1972, position: 'All practitioners' },\r\n  {\r\n    title: 'The Godfather: Part II',\r\n    year: 1974,\r\n    position: 'All practitioners',\r\n  },\r\n  { title: 'The Dark Knight', year: 2008, position: 'All practitioners' },\r\n\r\n  { title: '12 Angry Men', year: 1957, position: 'All assistants' },\r\n  { title: \"Schindler's List\", year: 1993, position: 'All assistants' },\r\n  { title: 'Pulp Fiction', year: 1994, position: 'All assistants' },\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n    position: 'All assistants',\r\n  },\r\n  {\r\n    title: 'The Good, the Bad and the Ugly',\r\n    year: 1966,\r\n    position: 'All assistants',\r\n  },\r\n];\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'LÃ©on: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n];\r\n\r\nexport default Dropdown;\r\n","C:\\Users\\dell\\Desktop\\dechea\\src\\components\\calendar\\calenderView.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":15,"column":10,"nodeType":"30","messageId":"31","endLine":15,"endColumn":13},{"ruleId":"28","severity":1,"message":"32","line":154,"column":7,"nodeType":"30","messageId":"31","endLine":154,"endColumn":18},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'val' is assigned a value but never used.","Identifier","unusedVar","'top100Films' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]